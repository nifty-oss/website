"use strict";(self.webpackChunknifty_docs=self.webpackChunknifty_docs||[]).push([[1858],{6252:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var a=t(6070),s=t(5710),r=t(6911),o=t(2405);const i={sidebar_label:"Manager",sidebar_position:7},l="Manager",c={id:"asset/extensions/manager",title:"Manager",description:'For use cases where the asset needs to be controlled (managed) by a third-party address, Nifty Asset allows the creation of "managed" assets. These assets have the Manager extension enabled, which defines a delegate address with customizable permissions.',source:"@site/docs/asset/extensions/manager.md",sourceDirName:"asset/extensions",slug:"/asset/extensions/manager",permalink:"/docs/asset/extensions/manager",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"Manager",sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Links",permalink:"/docs/asset/extensions/links"},next:{title:"Metadata",permalink:"/docs/asset/extensions/metadata"}},d={},u=[{value:"Using a Manager",id:"using-a-manager",level:2},{value:"Fetching a Manager",id:"fetching-a-manager",level:2}];function h(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"manager",children:"Manager"}),"\n",(0,a.jsxs)(n.p,{children:['For use cases where the asset needs to be controlled (managed) by a third-party address, Nifty Asset allows the creation of "managed" assets. These assets have the ',(0,a.jsx)(n.code,{children:"Manager"})," extension enabled, which defines a delegate address with customizable permissions."]}),"\n",(0,a.jsxs)("table",{class:"account-layout-table",children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:(0,a.jsx)("i",{children:"Field"})}),(0,a.jsx)("th",{children:(0,a.jsx)("i",{children:"Description"})})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:"delegate"})}),(0,a.jsx)("td",{children:"Address that controls the asset."})]}),(0,a.jsx)("tr",{children:(0,a.jsx)("td",{colspan:"2",children:(0,a.jsx)("i",{children:"A delegate is specified by:"})})}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:"address"})}),(0,a.jsx)("td",{children:"Address of the delegate."})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:"roles"})}),(0,a.jsxs)("td",{children:["Bitmask of the roles enabled (",(0,a.jsx)(n.code,{children:"Transfer"}),", ",(0,a.jsx)(n.code,{children:"Lock"})," and ",(0,a.jsx)(n.code,{children:"Burn"}),")."]})]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["The delegate can perform any of the actions specified on the ",(0,a.jsx)(n.code,{children:"roles"})," field. Therefore, when the ",(0,a.jsx)(n.code,{children:"Manager"})," extension is present on an asset, the ownership of the asset is ",(0,a.jsx)(n.strong,{children:"shared"})," \u2014 both the owner and the delegate will be able to transfer, lock and burn the asset."]}),"\n",(0,a.jsxs)(n.p,{children:["Since the presence of the ",(0,a.jsx)(n.code,{children:"Manager"})," extension significantly changes the nature of the asset, the extension can only be added to assets with the ",(0,a.jsx)(n.code,{children:"Standard"})," set to ",(0,a.jsx)(n.code,{children:"Managed"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Manager"})," extension must be specified at the point of creation of the asset. It is not possible to add or remove the extension after its creation. It is possible, however, to update the ",(0,a.jsx)(n.code,{children:"address"})," and the ",(0,a.jsx)(n.code,{children:"roles"})," enabled."]})}),"\n",(0,a.jsx)(n.h2,{id:"using-a-manager",children:"Using a Manager"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Manager"})," extension is used to create ",(0,a.jsx)(n.code,{children:"Managed"})," assets. The extension can be added using either the ",(0,a.jsx)(n.code,{children:"allocate"})," or ",(0,a.jsx)(n.code,{children:"create"})," instruction."]}),"\n","\n",(0,a.jsxs)(r.A,{children:[(0,a.jsx)(o.A,{value:"javascript",label:"JavaScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import { DelegateRole, Standard, create, manager } from '@nifty-oss/asset';\n\nawait create(umi, {\n  asset,\n  owner,\n  name: 'Managed Asset',\n  standard: Standard.Managed,\n  payer,\n  extension: manager(delegate, [DelegateRole.Transfer]),\n}).sendAndConfirm(umi);\n"})})}),(0,a.jsx)(o.A,{value:"rust",label:"Rust",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:'use nifty_asset::{\n  extensions::{ManagerBuilder, ExtensionBuilder},\n  instructions::CreateBuilder,\n  types::{\n    Delegate,\n    DelegateRole,\n    ExtensionInput,\n    ExtensionType,\n    Standard\n  },\n};\n\nlet mut manager = ManagerBuilder::default();\nmanager.set(&Delegate {\n    address: delegate.pubkey().into(),\n    roles: Delegate::encode_roles(vec![DelegateRole::Transfer]),\n});\n\nlet ix = CreateBuilder::new()\n  .asset(asset.pubkey())\n  .authority(authority.pubkey(), false)\n  .owner(owner.pubkey())\n  .payer(Some(payer.pubkey()))\n  .system_program(Some(system_program::id()))\n  .name("Managed Asset".to_string())\n  .standard(Standard::Managed)\n  .extension(ExtensionInput {\n    extension_type: ExtensionType::Manager,\n    length: manager.len() as u32,\n    data: Some(manager),\n})\n.instruction();\n'})})}),(0,a.jsx)(o.A,{value:"rust on-chain",label:"Rust (on-chain)",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:'use nifty_asset::{\n  extensions::{ManagerBuilder, ExtensionBuilder},\n  instructions::CreateCpiBuilder,\n  types::{\n    Delegate,\n    DelegateRole,\n    ExtensionInput,\n    ExtensionType,\n    Standard\n  },\n};\n\nlet mut manager = ManagerBuilder::default();\nmanager.set(&Delegate {\n    address: delegate.pubkey().into(),\n    roles: Delegate::encode_roles(vec![DelegateRole::Transfer]),\n});\n\nCreateCpiBuilder::new(ctx.accounts.nifty_asset_program)\n  .asset(ctx.accounts.group)\n  .authority(ctx.accounts.authority)\n  .owner(ctx.accounts.owner)\n  .payer(Some(ctx.accounts.payer))\n  .system_program(Some(ctx.accounts.system_program))\n  .name("Managed Asset".to_string())\n  .standard(Standard::Managed)\n  .extension(ExtensionInput {\n    extension_type: ExtensionType::Manager,\n    length: manager.len() as u32,\n    data: Some(manager),\n})\n.invoke();\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"fetching-a-manager",children:"Fetching a Manager"}),"\n",(0,a.jsx)(n.p,{children:"Given an asset account, it is possible to retrieve the manager information of an asset. Note that not all assets might have the extension, therefore it is necessary to assert if the extension was found."}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsx)(o.A,{value:"javascript",label:"JavaScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'import {\n  ExtensionType,\n  fetchAsset,\n  getExtension\n} from \'@nifty-oss/asset\';\n\nconst asset = await fetchAsset(umi, address);\nconst manager = getExtension(asset, ExtensionType.Manager);\n\nif (manager) {\n    console.log("Delegate: " + manager.address);\n    console.log("Roles: " + manager.roles);\n}\n'})})}),(0,a.jsx)(o.A,{value:"rust",label:"Rust",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:'use nifty_asset::{\n  extensions::Manager,\n  state::Asset,\n};\n\nlet account = get_account(address)\n  .await\n  .unwrap();\nlet account_data = account.data.as_ref();\n\nif let Some(manager) = Asset::get::<Manager>(account_data) {\n  println!("manager: {:?}", manager);\n}\n'})})}),(0,a.jsx)(o.A,{value:"rust on-chain",label:"Rust (on-chain)",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:'use nifty_asset::{\n  extensions::Manager,\n  state::Asset,\n};\n\nlet data = (*ctx.accounts.asset.data).borrow();\n\nif let Some(manager) = Asset::get::<Attributes>(&data) {\n  msg!("manager: {:?}", manager);\n}\n'})})})]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},2405:(e,n,t)=>{t.d(n,{A:()=>o});t(758);var a=t(3526);const s={tabItem:"tabItem_r0H8"};var r=t(6070);function o(e){let{children:n,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,o),hidden:t,children:n})}},6911:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(758),s=t(3526),r=t(192),o=t(5557),i=t(3777),l=t(1997),c=t(7650),d=t(1607);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=h(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[c,u]=m({queryString:t,groupId:s}),[p,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,d.Dv)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),f=(()=>{const e=c??p;return g({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!g({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),x(e)}),[u,x,r]),tabValues:r}}var x=t(6883);const f={tabList:"tabList_m2iM",tabItem:"tabItem_yoA2"};var b=t(6070);function j(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),s=i[t].value;s!==a&&(c(n),o(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...r,className:(0,s.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function v(e){const n=p(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,b.jsx)(j,{...n,...e}),(0,b.jsx)(y,{...n,...e})]})}function w(e){const n=(0,x.A)();return(0,b.jsx)(v,{...e,children:u(e.children)},String(n))}},5710:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(758);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);